# -*- python -*-

load(
    "@drake//tools/skylark:drake_cc.bzl",
    "drake_cc_binary",
    "drake_cc_googletest",
    "drake_cc_library",
)
load("//tools/install:install_data.bzl", "install_data")
load("//tools/lint:lint.bzl", "add_lint_tests")
load(
    "@drake//tools/vector_gen:vector_gen.bzl",
    "drake_cc_vector_gen_library",
)

package(default_visibility = ["//visibility:private"])

drake_cc_library(
    name = "simple_walker",
    srcs = ["simple_walker.cc"],
    hdrs = ["simple_walker.h"],
    deps = [
        "//common:essential",
        "//systems/framework:leaf_system",
        "//attic/manipulation/util:sim_diagram_builder",
        "//attic/multibody:rigid_body_tree_construction",
    ]
)

drake_cc_library(
    name="qp_controller",
    srcs = ["qp_controller.cc"],
    hdrs = ["qp_controller.h"],
    deps = [
        "//common:essential",
        "//solvers:mathematical_program",
        "//systems/controllers:linear_quadratic_regulator",
        "//attic/multibody:rigid_body_tree",
        "//attic/systems/controllers:rbt_inverse_dynamics",
        "//systems/controllers:pid_controller",
        "//systems/controllers:state_feedback_controller_interface",
        "//systems/framework:diagram_builder",
        "//systems/framework:leaf_system",
        "//systems/primitives:adder",
        "//systems/primitives:pass_through",
    ]
)

drake_cc_library(
    name="plan_generator",
    srcs = ["plan_generator.cc"],
    hdrs = ["plan_generator.h"],
    deps = [
        "//common:essential",
        "//solvers:mathematical_program",
        "//systems/controllers:linear_quadratic_regulator",
        "//attic/multibody:rigid_body_tree",
        "//attic/systems/controllers:rbt_inverse_dynamics",
        "//systems/controllers:pid_controller",
        "//systems/controllers:state_feedback_controller_interface",
        "//systems/framework:diagram_builder",
        "//systems/framework:leaf_system",
        "//systems/primitives:adder",
        "//systems/primitives:pass_through",
    ]
)

drake_cc_binary(
    name = "simulate",
    srcs = ["simulate_simple_walker.cc"],
    data = ["CompassGait.urdf", "KneedCompassGait.urdf"],
    deps = [
        ":simple_walker",
        ":qp_controller",
        ":plan_generator",
        "//systems/primitives:sine",
        "//systems/primitives:constant_vector_source",
        "//attic/multibody:rigid_body_tree",
        "//systems/controllers:state_feedback_controller_interface",
        "//attic/multibody/parsers",
        "//attic/multibody/rigid_body_plant:drake_visualizer",
        "//common:find_resource",
        "//systems/controllers:pid_controller",
        "//lcm",
        "//math:geometric_transform",
        "//systems/analysis:simulator",
        "//systems/framework:diagram_builder",
    ]
)

install_data()